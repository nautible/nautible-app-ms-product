# This workflow will build a Java project with Maven 
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Checkout manifest repo
      uses: actions/checkout@v2
      with:
        repository: nautible/nautible-app-ms-product-manifest
        path: nautible-app-ms-product-manifest
        token: ${{ secrets.PAT }}
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true -Dquarkus.package.type=fast-jar

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon public ECR
      id: login-ecr
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/nautible
    
    - name: Customer Build, tag, and push image to Amazon ECR
      id: build-image-service
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: public.ecr.aws/nautible
        ECR_REPOSITORY: nautible-app-ms-product
      run: |
        cd $GITHUB_WORKSPACE
        docker build --cache-from=$ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg BUILDKIT_INLINE_CACHE=1 -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./src/main/docker/Dockerfile.fast-jar .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: pull request
      id: pull-request
      env:
        tag: update-image-feature-${{ github.sha }}
        token: ${{ secrets.PAT }}
      run: |
        cd $GITHUB_WORKSPACE/nautible-app-ms-product-manifest
        git checkout -b $tag
        sed -i 's/image: public.ecr.aws\/nautible\/nautible-app-ms-product:\(.*\)/image: public.ecr.aws\/nautible\/nautible-app-ms-product:'$IMAGE_TAG'/' ./base/product-deployment.yaml
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "update manifest"
        git push --set-upstream origin $tag
        curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $token" "https://api.github.com/repos/nautible/nautible-app-ms-product-manifest/pulls" -d '{"title": "new image deploy request", "head": "nautible:'$tag'", "base": "main"}' -o /dev/null -w 'httpstatus:%{http_code}\n' -s
